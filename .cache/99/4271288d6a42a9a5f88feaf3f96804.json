{"id":"src/index.js","dependencies":[{"name":"A:\\Koulu\\Intro_Web_prog\\week6\\package.json","includedInParent":true,"mtime":1665919800062}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//import  {Chart}  from 'frappe-charts'  //dist/frappe-charts.min.esm\nvar jsonQuery = {\n  \"query\": [{\n    \"code\": \"Vuosi\",\n    \"selection\": {\n      \"filter\": \"item\",\n      \"values\": [\"2000\", \"2001\", \"2002\", \"2003\", \"2004\", \"2005\", \"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\"]\n    }\n  }, {\n    \"code\": \"Alue\",\n    \"selection\": {\n      \"filter\": \"item\",\n      \"values\": [\"SSS\"]\n    }\n  }, {\n    \"code\": \"Tiedot\",\n    \"selection\": {\n      \"filter\": \"item\",\n      \"values\": [\"vaesto\"]\n    }\n  }],\n  \"response\": {\n    \"format\": \"json-stat2\"\n  }\n};\n\nvar fetchData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var url, response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"https://statfin.stat.fi/PxWeb/api/v1/en/StatFin/synt/statfin_synt_pxt_12dy.px\";\n            _context.next = 3;\n            return fetch(url, {\n              method: \"POST\" //headers: {\"content-type\": \"index/json\"},\n              //body: JSON.stringify(jsonQuery)\n\n            });\n\n          case 3:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar buildChart = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var data, yyear, year, area, info, yearObject, areaObject, infoObject, chartData, chart;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetchData();\n\n          case 2:\n            data = _context2.sent;\n            console.log(data); //const test = data.variables\n            //const year =  Object.values(data.dimension.Vuosi.category.label)\n            //const area = Object.values(data.dimension.Alue.category.label)\n            //const info = Object.values(data.dimension.Tiedot.category.label)\n            //const population = data.value\n            //console.log(test)\n            //console.log(year)\n            //console.log(area)\n            //console.log(info)\n            //console.log(population)\n\n            yyear = data.variables;\n            year = yyear[0];\n            area = yyear[1];\n            info = yyear[2];\n            console.log(yyear); //console.log(year)\n            //console.log(area)\n            //console.log(info)\n\n            yearObject = Object.values(year.values);\n            areaObject = Object.values(area.valueTexts);\n            infoObject = Object.values(info.values);\n            console.log(yearObject);\n            console.log(areaObject);\n            console.log(infoObject);\n            yearObject.forEach(function (yearData, index) {\n              var wholeData = [];\n\n              for (var i = 10; i <= 32; i++) {\n                wholeData.push(yearObject[i * 310 + index]);\n              }\n\n              yearObject[index] = {\n                year: yearData,\n                values: areaObject,\n                info: infoObject\n              };\n            });\n            console.log(yearObject);\n            chartData = {\n              labels: areaObject,\n              dataset: yearObject\n            };\n            chart = new frappe.Chart(\"#chart\", {\n              title: \"country data\",\n              data: chartData,\n              type: line,\n              height: 450,\n              color: '#eb5146'\n            });\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function buildChart() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nbuildChart();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":47},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":4},"source":"src/index.js","original":{"line":3,"column":6},"name":"jsonQuery"},{"generated":{"line":10,"column":13},"source":"src/index.js","original":{"line":3,"column":15}},{"generated":{"line":10,"column":16},"source":"src/index.js","original":{"line":3,"column":18}},{"generated":{"line":11,"column":2},"source":"src/index.js","original":{"line":4,"column":4}},{"generated":{"line":11,"column":11},"source":"src/index.js","original":{"line":4,"column":13}},{"generated":{"line":11,"column":12},"source":"src/index.js","original":{"line":5,"column":8}},{"generated":{"line":12,"column":4},"source":"src/index.js","original":{"line":6,"column":12}},{"generated":{"line":12,"column":12},"source":"src/index.js","original":{"line":6,"column":20}},{"generated":{"line":12,"column":19},"source":"src/index.js","original":{"line":5,"column":8}},{"generated":{"line":13,"column":4},"source":"src/index.js","original":{"line":7,"column":12}},{"generated":{"line":13,"column":17},"source":"src/index.js","original":{"line":7,"column":25}},{"generated":{"line":14,"column":6},"source":"src/index.js","original":{"line":8,"column":16}},{"generated":{"line":14,"column":16},"source":"src/index.js","original":{"line":8,"column":26}},{"generated":{"line":14,"column":22},"source":"src/index.js","original":{"line":7,"column":25}},{"generated":{"line":15,"column":6},"source":"src/index.js","original":{"line":9,"column":16}},{"generated":{"line":15,"column":16},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":17},"source":"src/index.js","original":{"line":10,"column":20}},{"generated":{"line":15,"column":23},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":25},"source":"src/index.js","original":{"line":11,"column":20}},{"generated":{"line":15,"column":31},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":33},"source":"src/index.js","original":{"line":12,"column":20}},{"generated":{"line":15,"column":39},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":41},"source":"src/index.js","original":{"line":13,"column":20}},{"generated":{"line":15,"column":47},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":49},"source":"src/index.js","original":{"line":14,"column":20}},{"generated":{"line":15,"column":55},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":57},"source":"src/index.js","original":{"line":15,"column":20}},{"generated":{"line":15,"column":63},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":65},"source":"src/index.js","original":{"line":16,"column":20}},{"generated":{"line":15,"column":71},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":73},"source":"src/index.js","original":{"line":17,"column":20}},{"generated":{"line":15,"column":79},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":81},"source":"src/index.js","original":{"line":18,"column":20}},{"generated":{"line":15,"column":87},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":89},"source":"src/index.js","original":{"line":19,"column":20}},{"generated":{"line":15,"column":95},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":97},"source":"src/index.js","original":{"line":20,"column":20}},{"generated":{"line":15,"column":103},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":105},"source":"src/index.js","original":{"line":21,"column":20}},{"generated":{"line":15,"column":111},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":113},"source":"src/index.js","original":{"line":22,"column":20}},{"generated":{"line":15,"column":119},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":121},"source":"src/index.js","original":{"line":23,"column":20}},{"generated":{"line":15,"column":127},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":129},"source":"src/index.js","original":{"line":24,"column":20}},{"generated":{"line":15,"column":135},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":137},"source":"src/index.js","original":{"line":25,"column":20}},{"generated":{"line":15,"column":143},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":145},"source":"src/index.js","original":{"line":26,"column":20}},{"generated":{"line":15,"column":151},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":153},"source":"src/index.js","original":{"line":27,"column":20}},{"generated":{"line":15,"column":159},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":161},"source":"src/index.js","original":{"line":28,"column":20}},{"generated":{"line":15,"column":167},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":169},"source":"src/index.js","original":{"line":29,"column":20}},{"generated":{"line":15,"column":175},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":177},"source":"src/index.js","original":{"line":30,"column":20}},{"generated":{"line":15,"column":183},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":15,"column":185},"source":"src/index.js","original":{"line":31,"column":20}},{"generated":{"line":15,"column":191},"source":"src/index.js","original":{"line":9,"column":26}},{"generated":{"line":16,"column":4},"source":"src/index.js","original":{"line":7,"column":25}},{"generated":{"line":17,"column":2},"source":"src/index.js","original":{"line":5,"column":8}},{"generated":{"line":17,"column":3},"source":"src/index.js","original":{"line":4,"column":13}},{"generated":{"line":17,"column":5},"source":"src/index.js","original":{"line":35,"column":8}},{"generated":{"line":18,"column":4},"source":"src/index.js","original":{"line":36,"column":12}},{"generated":{"line":18,"column":12},"source":"src/index.js","original":{"line":36,"column":20}},{"generated":{"line":18,"column":18},"source":"src/index.js","original":{"line":35,"column":8}},{"generated":{"line":19,"column":4},"source":"src/index.js","original":{"line":37,"column":12}},{"generated":{"line":19,"column":17},"source":"src/index.js","original":{"line":37,"column":25}},{"generated":{"line":20,"column":6},"source":"src/index.js","original":{"line":38,"column":16}},{"generated":{"line":20,"column":16},"source":"src/index.js","original":{"line":38,"column":26}},{"generated":{"line":20,"column":22},"source":"src/index.js","original":{"line":37,"column":25}},{"generated":{"line":21,"column":6},"source":"src/index.js","original":{"line":39,"column":16}},{"generated":{"line":21,"column":16},"source":"src/index.js","original":{"line":39,"column":26}},{"generated":{"line":21,"column":17},"source":"src/index.js","original":{"line":40,"column":20}},{"generated":{"line":21,"column":22},"source":"src/index.js","original":{"line":39,"column":26}},{"generated":{"line":22,"column":4},"source":"src/index.js","original":{"line":37,"column":25}},{"generated":{"line":23,"column":2},"source":"src/index.js","original":{"line":35,"column":8}},{"generated":{"line":23,"column":3},"source":"src/index.js","original":{"line":4,"column":13}},{"generated":{"line":23,"column":5},"source":"src/index.js","original":{"line":44,"column":8}},{"generated":{"line":24,"column":4},"source":"src/index.js","original":{"line":45,"column":12}},{"generated":{"line":24,"column":12},"source":"src/index.js","original":{"line":45,"column":20}},{"generated":{"line":24,"column":20},"source":"src/index.js","original":{"line":44,"column":8}},{"generated":{"line":25,"column":4},"source":"src/index.js","original":{"line":46,"column":12}},{"generated":{"line":25,"column":17},"source":"src/index.js","original":{"line":46,"column":25}},{"generated":{"line":26,"column":6},"source":"src/index.js","original":{"line":47,"column":16}},{"generated":{"line":26,"column":16},"source":"src/index.js","original":{"line":47,"column":26}},{"generated":{"line":26,"column":22},"source":"src/index.js","original":{"line":46,"column":25}},{"generated":{"line":27,"column":6},"source":"src/index.js","original":{"line":48,"column":16}},{"generated":{"line":27,"column":16},"source":"src/index.js","original":{"line":48,"column":26}},{"generated":{"line":27,"column":17},"source":"src/index.js","original":{"line":49,"column":20}},{"generated":{"line":27,"column":25},"source":"src/index.js","original":{"line":48,"column":26}},{"generated":{"line":28,"column":4},"source":"src/index.js","original":{"line":46,"column":25}},{"generated":{"line":29,"column":2},"source":"src/index.js","original":{"line":44,"column":8}},{"generated":{"line":29,"column":3},"source":"src/index.js","original":{"line":4,"column":13}},{"generated":{"line":29,"column":4},"source":"src/index.js","original":{"line":3,"column":18}},{"generated":{"line":30,"column":2},"source":"src/index.js","original":{"line":54,"column":4}},{"generated":{"line":30,"column":14},"source":"src/index.js","original":{"line":54,"column":16}},{"generated":{"line":31,"column":4},"source":"src/index.js","original":{"line":55,"column":8}},{"generated":{"line":31,"column":14},"source":"src/index.js","original":{"line":55,"column":18}},{"generated":{"line":32,"column":2},"source":"src/index.js","original":{"line":54,"column":16}},{"generated":{"line":33,"column":0},"source":"src/index.js","original":{"line":3,"column":18}},{"generated":{"line":33,"column":1},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":35,"column":0},"source":"src/index.js","original":{"line":58,"column":0}},{"generated":{"line":35,"column":4},"source":"src/index.js","original":{"line":58,"column":6},"name":"fetchData"},{"generated":{"line":35,"column":13},"source":"src/index.js","original":{"line":58,"column":15}},{"generated":{"line":36,"column":2},"source":"src/index.js","original":{"line":58,"column":15}},{"generated":{"line":36,"column":72},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":37,"column":4},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":38,"column":4},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":39,"column":6},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":40,"column":8},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":41,"column":10},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":42,"column":12},"source":"src/index.js","original":{"line":59,"column":7},"name":"url"},{"generated":{"line":42,"column":15},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":42,"column":18},"source":"src/index.js","original":{"line":59,"column":13}},{"generated":{"line":42,"column":97},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":43,"column":12},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":44,"column":12},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":44,"column":19},"source":"src/index.js","original":{"line":60,"column":24},"name":"fetch"},{"generated":{"line":44,"column":24},"source":"src/index.js","original":{"line":60,"column":29}},{"generated":{"line":44,"column":25},"source":"src/index.js","original":{"line":60,"column":30},"name":"url"},{"generated":{"line":44,"column":28},"source":"src/index.js","original":{"line":60,"column":29}},{"generated":{"line":44,"column":30},"source":"src/index.js","original":{"line":60,"column":35}},{"generated":{"line":45,"column":14},"source":"src/index.js","original":{"line":61,"column":2},"name":"method"},{"generated":{"line":45,"column":20},"source":"src/index.js","original":{"line":61,"column":8}},{"generated":{"line":45,"column":22},"source":"src/index.js","original":{"line":61,"column":10}},{"generated":{"line":45,"column":28},"source":"src/index.js","original":{"line":60,"column":35}},{"generated":{"line":45,"column":29},"source":"src/index.js","original":{"line":62,"column":2}},{"generated":{"line":46,"column":14},"source":"src/index.js","original":{"line":63,"column":2}},{"generated":{"line":48,"column":12},"source":"src/index.js","original":{"line":60,"column":35}},{"generated":{"line":48,"column":13},"source":"src/index.js","original":{"line":60,"column":29}},{"generated":{"line":48,"column":14},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":50,"column":10},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":51,"column":12},"source":"src/index.js","original":{"line":60,"column":7},"name":"response"},{"generated":{"line":51,"column":20},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":53,"column":12},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":53,"column":16},"source":"src/index.js","original":{"line":65,"column":5},"name":"response"},{"generated":{"line":53,"column":24},"source":"src/index.js","original":{"line":65,"column":13}},{"generated":{"line":53,"column":25},"source":"src/index.js","original":{"line":65,"column":14},"name":"ok"},{"generated":{"line":53,"column":27},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":54,"column":14},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":55,"column":14},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":56,"column":12},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":58,"column":12},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":60,"column":10},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":61,"column":12},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":62,"column":12},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":62,"column":19},"source":"src/index.js","original":{"line":68,"column":20},"name":"response"},{"generated":{"line":62,"column":27},"source":"src/index.js","original":{"line":68,"column":28}},{"generated":{"line":62,"column":28},"source":"src/index.js","original":{"line":68,"column":29},"name":"json"},{"generated":{"line":62,"column":32},"source":"src/index.js","original":{"line":68,"column":20}},{"generated":{"line":62,"column":34},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":64,"column":10},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":65,"column":12},"source":"src/index.js","original":{"line":68,"column":7},"name":"data"},{"generated":{"line":65,"column":16},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":66,"column":12},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":66,"column":45},"source":"src/index.js","original":{"line":70,"column":8},"name":"data"},{"generated":{"line":66,"column":49},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":68,"column":10},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":69,"column":10},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":70,"column":12},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":71,"column":8},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":72,"column":6},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":73,"column":4},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":74,"column":2},"source":"src/index.js","original":{"line":58,"column":18}},{"generated":{"line":74,"column":3},"source":"src/index.js","original":{"line":58,"column":15}},{"generated":{"line":76,"column":2},"source":"src/index.js","original":{"line":58,"column":15}},{"generated":{"line":76,"column":18},"source":"src/index.js","original":{"line":58,"column":6},"name":"fetchData"},{"generated":{"line":76,"column":27},"source":"src/index.js","original":{"line":58,"column":15}},{"generated":{"line":77,"column":4},"source":"src/index.js","original":{"line":58,"column":15}},{"generated":{"line":78,"column":2},"source":"src/index.js","original":{"line":58,"column":15}},{"generated":{"line":79,"column":0},"source":"src/index.js","original":{"line":58,"column":15}},{"generated":{"line":79,"column":3},"source":"src/index.js","original":{"line":58,"column":0}},{"generated":{"line":81,"column":0},"source":"src/index.js","original":{"line":73,"column":0}},{"generated":{"line":81,"column":4},"source":"src/index.js","original":{"line":73,"column":6},"name":"buildChart"},{"generated":{"line":81,"column":14},"source":"src/index.js","original":{"line":73,"column":16}},{"generated":{"line":82,"column":2},"source":"src/index.js","original":{"line":73,"column":16}},{"generated":{"line":82,"column":73},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":83,"column":4},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":84,"column":4},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":85,"column":6},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":86,"column":8},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":87,"column":10},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":88,"column":12},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":89,"column":12},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":89,"column":19},"source":"src/index.js","original":{"line":74,"column":20},"name":"fetchData"},{"generated":{"line":89,"column":28},"source":"src/index.js","original":{"line":74,"column":29}},{"generated":{"line":89,"column":30},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":91,"column":10},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":92,"column":12},"source":"src/index.js","original":{"line":74,"column":7},"name":"data"},{"generated":{"line":92,"column":16},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":93,"column":12},"source":"src/index.js","original":{"line":75,"column":1},"name":"console"},{"generated":{"line":93,"column":19},"source":"src/index.js","original":{"line":75,"column":8}},{"generated":{"line":93,"column":20},"source":"src/index.js","original":{"line":75,"column":9},"name":"log"},{"generated":{"line":93,"column":23},"source":"src/index.js","original":{"line":75,"column":1}},{"generated":{"line":93,"column":24},"source":"src/index.js","original":{"line":75,"column":13},"name":"data"},{"generated":{"line":93,"column":28},"source":"src/index.js","original":{"line":75,"column":1}},{"generated":{"line":93,"column":30},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":93,"column":31},"source":"src/index.js","original":{"line":77,"column":1}},{"generated":{"line":94,"column":12},"source":"src/index.js","original":{"line":78,"column":1}},{"generated":{"line":95,"column":12},"source":"src/index.js","original":{"line":79,"column":1}},{"generated":{"line":96,"column":12},"source":"src/index.js","original":{"line":80,"column":1}},{"generated":{"line":97,"column":12},"source":"src/index.js","original":{"line":81,"column":1}},{"generated":{"line":98,"column":12},"source":"src/index.js","original":{"line":82,"column":1}},{"generated":{"line":99,"column":12},"source":"src/index.js","original":{"line":83,"column":1}},{"generated":{"line":100,"column":12},"source":"src/index.js","original":{"line":84,"column":1}},{"generated":{"line":101,"column":12},"source":"src/index.js","original":{"line":85,"column":1}},{"generated":{"line":102,"column":12},"source":"src/index.js","original":{"line":86,"column":1}},{"generated":{"line":104,"column":12},"source":"src/index.js","original":{"line":87,"column":7},"name":"yyear"},{"generated":{"line":104,"column":17},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":104,"column":20},"source":"src/index.js","original":{"line":87,"column":15},"name":"data"},{"generated":{"line":104,"column":24},"source":"src/index.js","original":{"line":87,"column":19}},{"generated":{"line":104,"column":25},"source":"src/index.js","original":{"line":87,"column":20},"name":"variables"},{"generated":{"line":104,"column":34},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":105,"column":12},"source":"src/index.js","original":{"line":88,"column":10},"name":"year"},{"generated":{"line":105,"column":16},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":105,"column":19},"source":"src/index.js","original":{"line":88,"column":17},"name":"yyear"},{"generated":{"line":105,"column":24},"source":"src/index.js","original":{"line":88,"column":22}},{"generated":{"line":105,"column":25},"source":"src/index.js","original":{"line":88,"column":23}},{"generated":{"line":105,"column":26},"source":"src/index.js","original":{"line":88,"column":22}},{"generated":{"line":105,"column":27},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":106,"column":12},"source":"src/index.js","original":{"line":89,"column":10},"name":"area"},{"generated":{"line":106,"column":16},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":106,"column":19},"source":"src/index.js","original":{"line":89,"column":17},"name":"yyear"},{"generated":{"line":106,"column":24},"source":"src/index.js","original":{"line":89,"column":22}},{"generated":{"line":106,"column":25},"source":"src/index.js","original":{"line":89,"column":23}},{"generated":{"line":106,"column":26},"source":"src/index.js","original":{"line":89,"column":22}},{"generated":{"line":106,"column":27},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":107,"column":12},"source":"src/index.js","original":{"line":90,"column":10},"name":"info"},{"generated":{"line":107,"column":16},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":107,"column":19},"source":"src/index.js","original":{"line":90,"column":17},"name":"yyear"},{"generated":{"line":107,"column":24},"source":"src/index.js","original":{"line":90,"column":22}},{"generated":{"line":107,"column":25},"source":"src/index.js","original":{"line":90,"column":23}},{"generated":{"line":107,"column":26},"source":"src/index.js","original":{"line":90,"column":22}},{"generated":{"line":107,"column":27},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":108,"column":12},"source":"src/index.js","original":{"line":91,"column":1},"name":"console"},{"generated":{"line":108,"column":19},"source":"src/index.js","original":{"line":91,"column":8}},{"generated":{"line":108,"column":20},"source":"src/index.js","original":{"line":91,"column":9},"name":"log"},{"generated":{"line":108,"column":23},"source":"src/index.js","original":{"line":91,"column":1}},{"generated":{"line":108,"column":24},"source":"src/index.js","original":{"line":91,"column":13},"name":"yyear"},{"generated":{"line":108,"column":29},"source":"src/index.js","original":{"line":91,"column":1}},{"generated":{"line":108,"column":31},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":108,"column":32},"source":"src/index.js","original":{"line":92,"column":4}},{"generated":{"line":109,"column":12},"source":"src/index.js","original":{"line":93,"column":4}},{"generated":{"line":110,"column":12},"source":"src/index.js","original":{"line":94,"column":4}},{"generated":{"line":112,"column":12},"source":"src/index.js","original":{"line":96,"column":10},"name":"yearObject"},{"generated":{"line":112,"column":22},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":112,"column":25},"source":"src/index.js","original":{"line":96,"column":23},"name":"Object"},{"generated":{"line":112,"column":31},"source":"src/index.js","original":{"line":96,"column":29}},{"generated":{"line":112,"column":32},"source":"src/index.js","original":{"line":96,"column":30},"name":"values"},{"generated":{"line":112,"column":38},"source":"src/index.js","original":{"line":96,"column":23}},{"generated":{"line":112,"column":39},"source":"src/index.js","original":{"line":96,"column":37},"name":"year"},{"generated":{"line":112,"column":43},"source":"src/index.js","original":{"line":96,"column":41}},{"generated":{"line":112,"column":44},"source":"src/index.js","original":{"line":96,"column":42},"name":"values"},{"generated":{"line":112,"column":50},"source":"src/index.js","original":{"line":96,"column":23}},{"generated":{"line":112,"column":51},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":113,"column":12},"source":"src/index.js","original":{"line":97,"column":10},"name":"areaObject"},{"generated":{"line":113,"column":22},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":113,"column":25},"source":"src/index.js","original":{"line":97,"column":23},"name":"Object"},{"generated":{"line":113,"column":31},"source":"src/index.js","original":{"line":97,"column":29}},{"generated":{"line":113,"column":32},"source":"src/index.js","original":{"line":97,"column":30},"name":"values"},{"generated":{"line":113,"column":38},"source":"src/index.js","original":{"line":97,"column":23}},{"generated":{"line":113,"column":39},"source":"src/index.js","original":{"line":97,"column":37},"name":"area"},{"generated":{"line":113,"column":43},"source":"src/index.js","original":{"line":97,"column":41}},{"generated":{"line":113,"column":44},"source":"src/index.js","original":{"line":97,"column":42},"name":"valueTexts"},{"generated":{"line":113,"column":54},"source":"src/index.js","original":{"line":97,"column":23}},{"generated":{"line":113,"column":55},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":114,"column":12},"source":"src/index.js","original":{"line":98,"column":10},"name":"infoObject"},{"generated":{"line":114,"column":22},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":114,"column":25},"source":"src/index.js","original":{"line":98,"column":23},"name":"Object"},{"generated":{"line":114,"column":31},"source":"src/index.js","original":{"line":98,"column":29}},{"generated":{"line":114,"column":32},"source":"src/index.js","original":{"line":98,"column":30},"name":"values"},{"generated":{"line":114,"column":38},"source":"src/index.js","original":{"line":98,"column":23}},{"generated":{"line":114,"column":39},"source":"src/index.js","original":{"line":98,"column":37},"name":"info"},{"generated":{"line":114,"column":43},"source":"src/index.js","original":{"line":98,"column":41}},{"generated":{"line":114,"column":44},"source":"src/index.js","original":{"line":98,"column":42},"name":"values"},{"generated":{"line":114,"column":50},"source":"src/index.js","original":{"line":98,"column":23}},{"generated":{"line":114,"column":51},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":115,"column":12},"source":"src/index.js","original":{"line":100,"column":4},"name":"console"},{"generated":{"line":115,"column":19},"source":"src/index.js","original":{"line":100,"column":11}},{"generated":{"line":115,"column":20},"source":"src/index.js","original":{"line":100,"column":12},"name":"log"},{"generated":{"line":115,"column":23},"source":"src/index.js","original":{"line":100,"column":4}},{"generated":{"line":115,"column":24},"source":"src/index.js","original":{"line":100,"column":16},"name":"yearObject"},{"generated":{"line":115,"column":34},"source":"src/index.js","original":{"line":100,"column":4}},{"generated":{"line":116,"column":12},"source":"src/index.js","original":{"line":101,"column":4},"name":"console"},{"generated":{"line":116,"column":19},"source":"src/index.js","original":{"line":101,"column":11}},{"generated":{"line":116,"column":20},"source":"src/index.js","original":{"line":101,"column":12},"name":"log"},{"generated":{"line":116,"column":23},"source":"src/index.js","original":{"line":101,"column":4}},{"generated":{"line":116,"column":24},"source":"src/index.js","original":{"line":101,"column":16},"name":"areaObject"},{"generated":{"line":116,"column":34},"source":"src/index.js","original":{"line":101,"column":4}},{"generated":{"line":117,"column":12},"source":"src/index.js","original":{"line":102,"column":4},"name":"console"},{"generated":{"line":117,"column":19},"source":"src/index.js","original":{"line":102,"column":11}},{"generated":{"line":117,"column":20},"source":"src/index.js","original":{"line":102,"column":12},"name":"log"},{"generated":{"line":117,"column":23},"source":"src/index.js","original":{"line":102,"column":4}},{"generated":{"line":117,"column":24},"source":"src/index.js","original":{"line":102,"column":16},"name":"infoObject"},{"generated":{"line":117,"column":34},"source":"src/index.js","original":{"line":102,"column":4}},{"generated":{"line":118,"column":12},"source":"src/index.js","original":{"line":104,"column":4},"name":"yearObject"},{"generated":{"line":118,"column":22},"source":"src/index.js","original":{"line":104,"column":14}},{"generated":{"line":118,"column":23},"source":"src/index.js","original":{"line":104,"column":15},"name":"forEach"},{"generated":{"line":118,"column":30},"source":"src/index.js","original":{"line":104,"column":4}},{"generated":{"line":118,"column":31},"source":"src/index.js","original":{"line":104,"column":23}},{"generated":{"line":118,"column":41},"source":"src/index.js","original":{"line":104,"column":24},"name":"yearData"},{"generated":{"line":118,"column":49},"source":"src/index.js","original":{"line":104,"column":23}},{"generated":{"line":118,"column":51},"source":"src/index.js","original":{"line":104,"column":34},"name":"index"},{"generated":{"line":118,"column":56},"source":"src/index.js","original":{"line":104,"column":23}},{"generated":{"line":118,"column":58},"source":"src/index.js","original":{"line":104,"column":43}},{"generated":{"line":119,"column":14},"source":"src/index.js","original":{"line":105,"column":8}},{"generated":{"line":119,"column":18},"source":"src/index.js","original":{"line":105,"column":12},"name":"wholeData"},{"generated":{"line":119,"column":27},"source":"src/index.js","original":{"line":105,"column":21}},{"generated":{"line":119,"column":30},"source":"src/index.js","original":{"line":105,"column":24}},{"generated":{"line":119,"column":32},"source":"src/index.js","original":{"line":105,"column":8}},{"generated":{"line":121,"column":14},"source":"src/index.js","original":{"line":106,"column":8}},{"generated":{"line":121,"column":19},"source":"src/index.js","original":{"line":106,"column":12}},{"generated":{"line":121,"column":23},"source":"src/index.js","original":{"line":106,"column":16},"name":"i"},{"generated":{"line":121,"column":24},"source":"src/index.js","original":{"line":106,"column":17}},{"generated":{"line":121,"column":27},"source":"src/index.js","original":{"line":106,"column":20}},{"generated":{"line":121,"column":29},"source":"src/index.js","original":{"line":106,"column":8}},{"generated":{"line":121,"column":31},"source":"src/index.js","original":{"line":106,"column":25},"name":"i"},{"generated":{"line":121,"column":32},"source":"src/index.js","original":{"line":106,"column":26}},{"generated":{"line":121,"column":36},"source":"src/index.js","original":{"line":106,"column":30}},{"generated":{"line":121,"column":38},"source":"src/index.js","original":{"line":106,"column":8}},{"generated":{"line":121,"column":40},"source":"src/index.js","original":{"line":106,"column":35},"name":"i"},{"generated":{"line":121,"column":41},"source":"src/index.js","original":{"line":106,"column":36}},{"generated":{"line":121,"column":43},"source":"src/index.js","original":{"line":106,"column":8}},{"generated":{"line":121,"column":45},"source":"src/index.js","original":{"line":106,"column":39}},{"generated":{"line":122,"column":16},"source":"src/index.js","original":{"line":107,"column":12},"name":"wholeData"},{"generated":{"line":122,"column":25},"source":"src/index.js","original":{"line":107,"column":21}},{"generated":{"line":122,"column":26},"source":"src/index.js","original":{"line":107,"column":22},"name":"push"},{"generated":{"line":122,"column":30},"source":"src/index.js","original":{"line":107,"column":12}},{"generated":{"line":122,"column":31},"source":"src/index.js","original":{"line":107,"column":27},"name":"yearObject"},{"generated":{"line":122,"column":41},"source":"src/index.js","original":{"line":107,"column":37}},{"generated":{"line":122,"column":42},"source":"src/index.js","original":{"line":107,"column":38},"name":"i"},{"generated":{"line":122,"column":43},"source":"src/index.js","original":{"line":107,"column":39}},{"generated":{"line":122,"column":46},"source":"src/index.js","original":{"line":107,"column":42}},{"generated":{"line":122,"column":49},"source":"src/index.js","original":{"line":107,"column":38}},{"generated":{"line":122,"column":52},"source":"src/index.js","original":{"line":107,"column":48},"name":"index"},{"generated":{"line":122,"column":57},"source":"src/index.js","original":{"line":107,"column":37}},{"generated":{"line":122,"column":58},"source":"src/index.js","original":{"line":107,"column":12}},{"generated":{"line":123,"column":14},"source":"src/index.js","original":{"line":108,"column":9}},{"generated":{"line":125,"column":14},"source":"src/index.js","original":{"line":109,"column":8},"name":"yearObject"},{"generated":{"line":125,"column":24},"source":"src/index.js","original":{"line":109,"column":18}},{"generated":{"line":125,"column":25},"source":"src/index.js","original":{"line":109,"column":19},"name":"index"},{"generated":{"line":125,"column":30},"source":"src/index.js","original":{"line":109,"column":18}},{"generated":{"line":125,"column":31},"source":"src/index.js","original":{"line":109,"column":8}},{"generated":{"line":125,"column":34},"source":"src/index.js","original":{"line":109,"column":28}},{"generated":{"line":126,"column":16},"source":"src/index.js","original":{"line":110,"column":12},"name":"year"},{"generated":{"line":126,"column":20},"source":"src/index.js","original":{"line":110,"column":16}},{"generated":{"line":126,"column":22},"source":"src/index.js","original":{"line":110,"column":18},"name":"yearData"},{"generated":{"line":126,"column":30},"source":"src/index.js","original":{"line":109,"column":28}},{"generated":{"line":127,"column":16},"source":"src/index.js","original":{"line":111,"column":12},"name":"values"},{"generated":{"line":127,"column":22},"source":"src/index.js","original":{"line":111,"column":18}},{"generated":{"line":127,"column":24},"source":"src/index.js","original":{"line":111,"column":21},"name":"areaObject"},{"generated":{"line":127,"column":34},"source":"src/index.js","original":{"line":109,"column":28}},{"generated":{"line":128,"column":16},"source":"src/index.js","original":{"line":112,"column":12},"name":"info"},{"generated":{"line":128,"column":20},"source":"src/index.js","original":{"line":112,"column":16}},{"generated":{"line":128,"column":22},"source":"src/index.js","original":{"line":112,"column":18},"name":"infoObject"},{"generated":{"line":129,"column":14},"source":"src/index.js","original":{"line":109,"column":28}},{"generated":{"line":129,"column":15},"source":"src/index.js","original":{"line":109,"column":8}},{"generated":{"line":130,"column":12},"source":"src/index.js","original":{"line":114,"column":5}},{"generated":{"line":130,"column":13},"source":"src/index.js","original":{"line":104,"column":4}},{"generated":{"line":131,"column":12},"source":"src/index.js","original":{"line":115,"column":4},"name":"console"},{"generated":{"line":131,"column":19},"source":"src/index.js","original":{"line":115,"column":11}},{"generated":{"line":131,"column":20},"source":"src/index.js","original":{"line":115,"column":12},"name":"log"},{"generated":{"line":131,"column":23},"source":"src/index.js","original":{"line":115,"column":4}},{"generated":{"line":131,"column":24},"source":"src/index.js","original":{"line":115,"column":16},"name":"yearObject"},{"generated":{"line":131,"column":34},"source":"src/index.js","original":{"line":115,"column":4}},{"generated":{"line":132,"column":12},"source":"src/index.js","original":{"line":117,"column":10},"name":"chartData"},{"generated":{"line":132,"column":21},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":132,"column":24},"source":"src/index.js","original":{"line":117,"column":22}},{"generated":{"line":133,"column":14},"source":"src/index.js","original":{"line":118,"column":8},"name":"labels"},{"generated":{"line":133,"column":20},"source":"src/index.js","original":{"line":118,"column":14}},{"generated":{"line":133,"column":22},"source":"src/index.js","original":{"line":118,"column":16},"name":"areaObject"},{"generated":{"line":133,"column":32},"source":"src/index.js","original":{"line":117,"column":22}},{"generated":{"line":134,"column":14},"source":"src/index.js","original":{"line":119,"column":8},"name":"dataset"},{"generated":{"line":134,"column":21},"source":"src/index.js","original":{"line":119,"column":15}},{"generated":{"line":134,"column":23},"source":"src/index.js","original":{"line":119,"column":17},"name":"yearObject"},{"generated":{"line":135,"column":12},"source":"src/index.js","original":{"line":117,"column":22}},{"generated":{"line":135,"column":13},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":136,"column":12},"source":"src/index.js","original":{"line":121,"column":10},"name":"chart"},{"generated":{"line":136,"column":17},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":136,"column":20},"source":"src/index.js","original":{"line":121,"column":18}},{"generated":{"line":136,"column":24},"source":"src/index.js","original":{"line":121,"column":22},"name":"frappe"},{"generated":{"line":136,"column":30},"source":"src/index.js","original":{"line":121,"column":28}},{"generated":{"line":136,"column":31},"source":"src/index.js","original":{"line":121,"column":29},"name":"Chart"},{"generated":{"line":136,"column":36},"source":"src/index.js","original":{"line":121,"column":18}},{"generated":{"line":136,"column":37},"source":"src/index.js","original":{"line":121,"column":35}},{"generated":{"line":136,"column":45},"source":"src/index.js","original":{"line":121,"column":18}},{"generated":{"line":136,"column":47},"source":"src/index.js","original":{"line":121,"column":44}},{"generated":{"line":137,"column":14},"source":"src/index.js","original":{"line":122,"column":8},"name":"title"},{"generated":{"line":137,"column":19},"source":"src/index.js","original":{"line":122,"column":13}},{"generated":{"line":137,"column":21},"source":"src/index.js","original":{"line":122,"column":15}},{"generated":{"line":137,"column":35},"source":"src/index.js","original":{"line":121,"column":44}},{"generated":{"line":138,"column":14},"source":"src/index.js","original":{"line":123,"column":8},"name":"data"},{"generated":{"line":138,"column":18},"source":"src/index.js","original":{"line":123,"column":12}},{"generated":{"line":138,"column":20},"source":"src/index.js","original":{"line":123,"column":14},"name":"chartData"},{"generated":{"line":138,"column":29},"source":"src/index.js","original":{"line":121,"column":44}},{"generated":{"line":139,"column":14},"source":"src/index.js","original":{"line":124,"column":8},"name":"type"},{"generated":{"line":139,"column":18},"source":"src/index.js","original":{"line":124,"column":12}},{"generated":{"line":139,"column":20},"source":"src/index.js","original":{"line":124,"column":14},"name":"line"},{"generated":{"line":139,"column":24},"source":"src/index.js","original":{"line":121,"column":44}},{"generated":{"line":140,"column":14},"source":"src/index.js","original":{"line":125,"column":8},"name":"height"},{"generated":{"line":140,"column":20},"source":"src/index.js","original":{"line":125,"column":14}},{"generated":{"line":140,"column":22},"source":"src/index.js","original":{"line":125,"column":16}},{"generated":{"line":140,"column":25},"source":"src/index.js","original":{"line":121,"column":44}},{"generated":{"line":141,"column":14},"source":"src/index.js","original":{"line":126,"column":8},"name":"color"},{"generated":{"line":141,"column":19},"source":"src/index.js","original":{"line":126,"column":13}},{"generated":{"line":141,"column":21},"source":"src/index.js","original":{"line":126,"column":15}},{"generated":{"line":142,"column":12},"source":"src/index.js","original":{"line":121,"column":44}},{"generated":{"line":142,"column":13},"source":"src/index.js","original":{"line":121,"column":18}},{"generated":{"line":142,"column":14},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":144,"column":10},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":145,"column":10},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":146,"column":12},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":147,"column":8},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":148,"column":6},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":149,"column":4},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":150,"column":2},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":150,"column":3},"source":"src/index.js","original":{"line":73,"column":16}},{"generated":{"line":152,"column":2},"source":"src/index.js","original":{"line":73,"column":16}},{"generated":{"line":152,"column":18},"source":"src/index.js","original":{"line":73,"column":6},"name":"buildChart"},{"generated":{"line":152,"column":28},"source":"src/index.js","original":{"line":73,"column":16}},{"generated":{"line":153,"column":4},"source":"src/index.js","original":{"line":73,"column":16}},{"generated":{"line":154,"column":2},"source":"src/index.js","original":{"line":73,"column":16}},{"generated":{"line":155,"column":0},"source":"src/index.js","original":{"line":73,"column":16}},{"generated":{"line":155,"column":3},"source":"src/index.js","original":{"line":73,"column":0}},{"generated":{"line":157,"column":0},"source":"src/index.js","original":{"line":132,"column":0},"name":"buildChart"},{"generated":{"line":157,"column":10},"source":"src/index.js","original":{"line":132,"column":10}}],"sources":{"src/index.js":"\r\n//import  {Chart}  from 'frappe-charts'  //dist/frappe-charts.min.esm\r\nconst jsonQuery = {\r\n    \"query\": [\r\n        {\r\n            \"code\": \"Vuosi\",\r\n            \"selection\": {\r\n                \"filter\": \"item\",\r\n                \"values\": [\r\n                    \"2000\",\r\n                    \"2001\",\r\n                    \"2002\",\r\n                    \"2003\",\r\n                    \"2004\",\r\n                    \"2005\",\r\n                    \"2006\",\r\n                    \"2007\",\r\n                    \"2008\",\r\n                    \"2009\",\r\n                    \"2010\",\r\n                    \"2011\",\r\n                    \"2012\",\r\n                    \"2013\",\r\n                    \"2014\",\r\n                    \"2015\",\r\n                    \"2016\",\r\n                    \"2017\",\r\n                    \"2018\",\r\n                    \"2019\",\r\n                    \"2020\",\r\n                    \"2021\"\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"code\": \"Alue\",\r\n            \"selection\": {\r\n                \"filter\": \"item\",\r\n                \"values\": [\r\n                    \"SSS\"\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"code\": \"Tiedot\",\r\n            \"selection\": {\r\n                \"filter\": \"item\",\r\n                \"values\": [\r\n                    \"vaesto\"\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"response\": {\r\n        \"format\": \"json-stat2\"\r\n    }\r\n}\r\nconst fetchData = async() =>{\r\n\tconst url = \"https://statfin.stat.fi/PxWeb/api/v1/en/StatFin/synt/statfin_synt_pxt_12dy.px\"\r\n\tconst response = await fetch(url, {\r\n\t\tmethod: \"POST\"\r\n\t\t//headers: {\"content-type\": \"index/json\"},\r\n\t\t//body: JSON.stringify(jsonQuery)\r\n\t})\r\n\tif(!response.ok){\r\n\t\treturn;\r\n\t}\r\n\tconst data = await response.json()\r\n\t\r\n\treturn data\r\n}\r\n\r\nconst buildChart = async () => {\r\n\tconst data = await fetchData()\r\n\tconsole.log(data)\r\n\r\n\t//const test = data.variables\r\n\t//const year =  Object.values(data.dimension.Vuosi.category.label)\r\n\t//const area = Object.values(data.dimension.Alue.category.label)\r\n\t//const info = Object.values(data.dimension.Tiedot.category.label)\r\n\t//const population = data.value\r\n\t//console.log(test)\r\n\t//console.log(year)\r\n\t//console.log(area)\r\n\t//console.log(info)\r\n\t//console.log(population)\r\n\tconst yyear = data.variables\r\n    const year = yyear[0]\r\n    const area = yyear[1]\r\n    const info = yyear[2]\r\n\tconsole.log(yyear)\r\n    //console.log(year)\r\n    //console.log(area)\r\n    //console.log(info)\r\n\r\n    const yearObject = Object.values(year.values)\r\n    const areaObject = Object.values(area.valueTexts)\r\n    const infoObject = Object.values(info.values)\r\n    \r\n    console.log(yearObject)\r\n    console.log(areaObject)\r\n    console.log(infoObject)\r\n\r\n    yearObject.forEach((yearData, index) =>{\r\n        let wholeData = []\r\n        for(let i = 10 ; i <= 32 ; i++){\r\n            wholeData.push(yearObject[i * 310 + index])\r\n        }\r\n        yearObject[index] = {\r\n            year: yearData,\r\n            values:  areaObject,\r\n            info: infoObject\r\n        }\r\n    })\r\n    console.log(yearObject)\r\n\r\n    const chartData = {\r\n        labels: areaObject,\r\n        dataset: yearObject\r\n    }\r\n    const chart = new frappe.Chart(\"#chart\",{\r\n        title: \"country data\",\r\n        data: chartData,\r\n        type: line,\r\n        height: 450,\r\n        color: '#eb5146'\r\n    \r\n    })\r\n\r\n}\r\n\r\nbuildChart()"},"lineCount":null}},"error":null,"hash":"86cbf0dd29fdd1dc239315c916ebaf78","cacheData":{"env":{}}}